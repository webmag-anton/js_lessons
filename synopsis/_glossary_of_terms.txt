check in / sign up - зарегистрироваться
log in / sign in - авторизоваться (войти в систему) 
request, responce - запрос, ответ
maintaince - поддержание (проекта)
encode / decode - кодировать / раскодировать
транслитерация - передача знаков одной письменности знаками другой (латиницей русские слова)
credentials - полномочия
parsing - чтение (разбор)
rendering - отображение (отрисовка)
polyfill -  код, написанный в старом стандарте для того, чтобы заместить определенные фичи, 
			   которых не существует в старых браузерах
privicy policy - политика конфиденциальности
alias - псевдоним для длинной команды (более короткий)
scrollbar - полоса прокрутки (bar - полоса)
timestamp - отметка времени
fps - frames per second (кадров в секунду)
+, -, *, / - sum, sub, mult, div
shortcut - сочетание клавиш
crutch - костыль (обход)
compatibility - совместимость
extract - извлекать
hash - мешанина
token - знак
иммутабельность - неизменяемость (объектов)
chunks - фрагмент, кусок
emplementation - реализация, создание (метода)
интерфейс — «общая граница» между отдельными системами, через которую они взаимодействуют; 
				совокупность средств и правил, обеспечивающих взаимодействие отдельных систем  
				(например, человека, программного обеспечения, аппаратного обеспечения и т. п.);
				клавиатура, мышь и пр. устройства ввода — элементы интерфейса «человек — компьютер»
внутренний интерфейс – методы и свойства, доступные из других методов класса, но не снаружи класса
внешний интерфейс – методы и свойства, доступные снаружи класса
API (Application Programming Interface) - программный интерфейс приложения. Проще говоря, это то, 
														что обеспечивает эффективный процесс коммуникаций между 
														программами, использующими функции и ресурсы друг друга;
														то есть это набор методов для взаимодействия с приложением
CLI (Command line interface) - интерфейс командной строки; также известен под названиями «консоль» 
										 и «терминал»; он противопоставляется системам управления программой
										 на основе меню, а также различным реализациям графического интерфейса
шаблонизатор — программное обеспечение, позволяющее использовать html-шаблоны для генерации конечных 
					html-страниц. Основная цель использования шаблонизаторов — это отделение представления 
					данных от исполняемого кода. Часто это необходимо для обеспечения возможности  
					параллельной работы программиста и верстальщика; в JS популярен шаблонизатор Handlebars
одностраничное приложение (SPA) - это веб-приложение или веб-сайт, который взаимодействует с веб-браузером, 
											 динамически переписывая текущую веб-страницу новыми данными с веб-сервера, 
											 вместо того, чтобы по умолчанию браузер загружал целые новые страницы. 
											 Цель - более быстрые переходы, которые делают сайт более похожим на нативное 
											 приложение. В SPA все необходимые коды HTML, JavaScript и CSS либо извлекаются 
											 браузером с одной загрузкой страницы, либо соответствующие ресурсы динамически 
											 загружаются и добавляются на страницу по мере необходимости, обычно в ответ на 
											 действия пользователя. Страница не перезагружается в любой точке процесса и не 
											 передает управление на другую страницу, хотя хэш местоположения можно 
											 использовать для обеспечения восприятия и навигации по отдельным логическим 
											 страницам в приложении.
											 SPA использует единственный HTML-документ как оболочку для всех веб-страниц 
											 и организует взаимодействие с пользователем через динамически  
											 подгружаемые HTML, CSS, JavaScript, обычно посредством AJAX


command prompt - командная строка
clipboard - буфер обмена
reassign - переприсвоить (переменную)
`` - строковые литералы (обратные кавычки), для созния шаблонов
контекст выполнения функции - значение переменной this внутри функции
scope - область видимости
hoisting - все объявления переменных var «всплывают» в самый верх функции со значением undefined;
			  так же всплывают и function declaration (можно вызывать до объявления), в отличае от FE
модуль - это многократно используемая часть кода, инкапсулирующая 
			детали реализации и предоставляющая открытый API
IIFE (immediately-invoked function expressions) - функция, запускаемая сразу после объявления, 
																  использовалась в es5- вместо модулей для 
																  создани собственной области видимости
валидация - проверка (введённых данных)
верификация - процесс подтверждения подлинности данных (подтверждение аккаунта)
декоратор - это обёртка вокруг функции, которая изменяет поведение последней; основная работа 
				по-прежнему выполняется функцией
каррирование - это трансформация, которая дает возможность частичного вызова ф-ии: f(a)(b)(c) 
					вместо обычного вызова f(a, b, c); это позволяет создавать частично 
					применённые ф-ии; возможна реализация методом bind()
dispatch - отправка (вызов события)
функция высшего порядка —  это функция, которая может принимать другую функцию в качестве 
									аргумента или возвращать другую функцию в качестве результата
URL (Uniform Resource Locator) — это URI (Uniform Resource Identifier), который, помимо идентификации 
											ресурса, предоставляет ещё и информацию о местонахождении этого ресурса
CORS (Cross-Origin Resource Sharing) - совместное использование ресурсов между разными источниками
													( источник (origin) – комбинация домен/порт/протокол )
инстанцирование - создание экземпляра класса



однопоточность —  JavaScript работает в однопоточном режиме, т.е. только одна операция может 
						быть выполнена в определенный момент времени
синхронное выполнение кода —  код выполняется синхронно, т.е. следующая операция не выполняется до 
										завершения предыдущей (например пока не закроется alert)
кроссплатформенный язык -  использующийся в разных сферах (в браузере, на веб-сервере, в 
									кофеварке); каждая среда предоставляет свой функционал, который 
									спецификация JavaScript называет окружением
динамическая типизация - возможность переменной любого типа присвоить другой тип: переменной 
								 строкового типа присвоить число (это плохо для больших проектов); в 
								 js возможность написания кода со статической типизацией дает TypeScript
transpilation - преобразование программы, при котором используется исходный код программы, 
					 написанной на одном языке программирования в качестве исходных данных, и 
					 производится эквивалентный исходный код на другом языке программирования (babel)
refactoring, или переработка кода - процесс изменения внутренней структуры программы, 
												не затрагивающий её внешнего поведения и имеющий 
												целью облегчить понимание её работы
декомпозиция - разделение целого на части


