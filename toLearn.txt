ООП               +
switch            +
Map, Set          +
canvas            +
SPA               +
nodeJs            +
webpack           +
react             +
JSX               +
redux             +
typeScript
patterns



to Do list:
конспект VSC & Sublime на github                                              +
довести до ума Gulp сборку                                                    +
сделать все конспекты по learn_js в одном стиле под VSC                       +
сохранить в облако все проекты infosource
выложить в облако все фоотки в infosource
скинуть свои фотки на ноут с компа
выложить в облако доки по энтивио
создать новую рабочую почту gmail









JSLint, ESLint, JSHint - валидаторы, инструменты для проверки и форматирования кода в соответствии с конфигом;
                                     они помогают писать чистый и красивый код оповещают о пропущенной кавычке, точке с 
                                     запятой и др. моментах; Предпочтительней ESLint, он самый новый 
                                     https://www.youtube.com/watch?v=slEtjbr8sVY


MVC - паттерн, который рашает задачу разделения визуального представления (view) и данных (model). Model и 
      view не взаимодействуют между собой напрямую, связь происходит через controller.


Handlebars.js — это клиентский шаблонизатор для JavaScript (однако ничего не мешает использовать его на 
                стороне сервера). Он принимает на вход любую строку, состоящую из HTML-тегов и специальных 
                выражений и компилирует их в функцию JavaScript. Эта функция в свою очередь принимает один 
                параметр — объект данных и возвращает строку HTML, где определенные свойства объекта с 
                данными уже вставлены в нужные места шаблона.
Чтобы начать использовать Handlebars в своем проекте, необходимо подключить файл handlebars.js. 
Самый простой способ определения шаблона Handlebars — внедрение его непосредственно на страницу внутри 
тегов <script>. 
Переменные шаблона, а также выражения заключаются в двойные фигурные скобки {{...}}. Данные в шаблон 
передаются в виде обычного объекта, переменным шаблона соответствуют свойства этого объекта.






-  интерфейс в классе - это его методы
-  эмплементация метода это реализация, создание
-  инстанцирование - создание экземпляра класса
-  разная реализация метода toString() у встроенных классов это так же пример полиморфизма
-  расширение интерфейса родительского класса (полиморфизм), а так же дженерики (TypeScript) - проверка типа аргумента ф-ии

почитать про разницу между между интерфейсом и абстрактным классом





Посмотреть по React
- setState асинхронна, поэтому для выполнения кода сразу после установки состояния, нужно передавать 2м параметром 
  callback, а 1й параметр или объект с состоянием или ф-я, принимающая prevState, props и возвращающая объект
- pure component
- мемизация