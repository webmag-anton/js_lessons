ООП               +
switch            +
Map, Set          +
canvas            +
SPA               +
nodeJs            +
webpack           +
react             +
JSX               +
redux             +
typeScript
patterns



   to Do list:
конспект VSC & Sublime на github                                              +
довести до ума Gulp сборку                                                    +
сделать все конспекты по learn_js в одном стиле под VSC                       +
сохранить в облако все проекты infosource                                     +
выложить в облако все фоотки в infosource                                     +
скинуть свои фотки в облако с компа                                           +
выложить в облако доки по энтивио                                             +
создать новую рабочую почту gmail











MVC - паттерн, который рашает задачу разделения визуального представления (view) и данных (model). Model и 
      view не взаимодействуют между собой напрямую, связь происходит через controller.





-  интерфейс в классе - это его методы
-  эмплементация метода это реализация, создание
-  инстанцирование - создание экземпляра класса
-  разная реализация метода toString() у встроенных классов это так же пример полиморфизма
-  расширение интерфейса родительского класса (полиморфизм), а так же дженерики (TypeScript) - проверка типа аргумента ф-ии

почитать про разницу между между интерфейсом и абстрактным классом





   Посмотреть по React
- setState асинхронна, поэтому для выполнения кода сразу после установки состояния, нужно передавать 2м параметром 
  callback, а 1й параметр или объект с состоянием или ф-я, принимающая prevState, props и возвращающая объект
- pure component
- мемизация